{"version":3,"sources":["reportWebVitals.js","Components/Button.js","Components/Header.js","TestComp.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","text","color","onClick","style","backgroundColor","className","defaultProps","prototype","PropTypes","string","func","isRequired","Header","props","title","showAddTask","taskShow","PropType","TestComp","Task","task","onDelete","onDoubleClick","reminder","id","name","cursor","day","Tasks","tasks","map","taskToSend","AddTask","addTask","useState","setTask","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","tasksList","App","taskState","setAddTask","console","log","Math","floor","random","newTask","previ","length","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d90c1c75.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Button = ({text,color,onClick}) => {\n\n    return  <button  onClick={onClick} style={{backgroundColor:color}} className=\"btn\">{text}</button>\n    \n}\n\nButton.defaultProps = {\n    text : \"Add\",\n    color:\"blue\"  \n  }\n\nButton.prototype ={\n    text:PropTypes.string,\n    color:PropTypes.string,\n    onClick:PropTypes.func.isRequired\n\n}\n\n\nexport default Button\n","import React from 'react'\nimport PropType from 'prop-types'\nimport Button from './Button'\n\nconst Header = (props) => {\n\n  \n    return (\n        <header className=\"header\">\n           <h1>{props.title}</h1> \n           {/* Created the separate component for Button , Anad passing the text ,color and a onlcick even with the function which needs to call */}\n          \n           <Button text={props.showAddTask ? \"Close\" : \"Add\"} color={props.showAddTask ? \"red\" : \"green\"} onClick={props.taskShow}/>\n\n        </header>\n    )\n  \n}\n\n//This is the deafault property we are adding in case if its not present \nHeader.defaultProps = {\n    title : \"Default Header\"  \n  }\n\n   \n //This is kind of type script , Reistricing only String, and making required. Otherwise throw wrror\n //this is property validation\n Header.prototype ={\n    title:PropType.string.isRequired\n } \nexport default Header\n","\n//import './App.css'\n\nfunction TestComp() {\n  let name = \"Sanjay\"\nvar status = true\n\n{/* JSX Styling react always recommends to use inline styles.*/}\n\nvar inlineStyle = {\n  color:'red'\n}\n\n  return (\n    <div className=\"App\">\n    <h2 style={inlineStyle}> My name is {name}</h2>\n    {/* THis is how we use the commnet in JSX .\n       *There is no if else condition in JSX  */}\n    <p style={{color:'blue'}} id=\"test\">Status : {status === false ? \"Status is false\" : \"Status is true\"}</p>\n     \n    </div>\n    \n    //The below will give us the error as its one more parent\n   // <p></p>\n  );\n}\n\n\nexport default TestComp;\n","import React from 'react'\nimport {FaTimes} from 'react-icons/fa'\n\n\nconst Task = ({task,onDelete,onDoubleClick}) => {\n    \n    return (\n        //Below is how we give the default class name if any other class name presetn\n        //className={`task ${task.reminder == true ? \"reminder\" : ''}`}\n        <div className={`task ${task.reminder ? 'reminder' : ''} `} onDoubleClick={()=>onDoubleClick(task.id)}>\n          <h3>{task.name} <FaTimes color=\"red\" cursor=\"pointer\" onClick={()=>onDelete(task.id)}/> </h3>  \n          <p>{task.day}</p>\n        </div>\n       \n    )\n}\n\nexport default Task\n","import React from 'react'\nimport Task from './Task'\n\nconst Tasks = (props) => {\n\n\n//console.log(props)\n\n\n    return (\n        <div>\n  {  /* Below is iteration with map. now we creat a separate componet for Task and pas the each task value        \n    { props.tasks.map((task) =>( <h3 key={task.id}>{task.name}</h3> ) ) }\n  */ } \n    {\n    props.tasks.map(\n        (taskToSend)=>(<Task task={taskToSend} key={taskToSend.id} onDelete={props.onDelete} onDoubleClick={props.onDoubleClick}/>)\n        )}\n    \n    \n\n        </div>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\n\nconst AddTask = ({addTask}) => {\n\n    //Creat a useState hook with empty value\nconst [name,setTask] = useState('')\nconst [day,setDay] = useState('')\nconst [reminder,setReminder] = useState(false)\n\nconst toUpdateValueInState = (e)=>{\n  //  console.log(e)\n   // setTask((val)=> e.target.value)\n   setTask( e.target.value)\n}\n\nfunction addTask1(e){\n     \ne.preventDefault()\n    if(!name){\n    alert(\"Task not present\")\n    return\n    }\n\n    //Send to call back as a object\n    addTask({name,day,reminder});\n\n    setTask('')\n    setDay('')\n    setReminder(false)\n\n\n}\n    return (\n       <form className=\"form-control\" onSubmit={addTask1}>\n    <div className=\"form-control\">\n      <label >Task</label>\n      <input type=\"text\" placeholder=\"Add Task\" value={name} onChange={toUpdateValueInState}/>\n    </div>\n\n<div className=\"form-control\">\n    <label>Date and Time</label>\n    <input type=\"text\" placeholder=\"Add Date and time\" value={day} onChange={(e)=>setDay(e.target.value)}/>\n</div>\n<div className=\"form-control form-control-check\">\n    <label>Reminder</label>\n    <input type=\"checkbox\" checked={reminder}  value={reminder} onChange={(e)=>setReminder(e.target.checked)}/>\n</div>\n<input type=\"submit\" className=\"btn btn-block\"  value=\"Submit\"/>\n       </form>\n    )\n}\n\nexport default AddTask\n","import React from 'react'\nimport Header from './Components/Header'\nimport TestComp from './TestComp'\nimport ReactState from './TestFolder/ReactState'\nimport Tasks from './Components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './Components/AddTask'\n//import './App.css'\n\nconst App = () => {\n\n    const [taskState,setTask] = useState(()=>tasksList)\n    const [showAddTask,setAddTask] = useState(false)\n   \n//Add Task\nconst addTask = (task)=>{\nconsole.log(task)\nconst id =Math.floor(Math.random()*100)\nconst newTask = {id:id,...task}\nconsole.log(newTask)\n//setTask([...taskState,newTask])\n\n//Here the taskList is a array, So we are adding the exsting array with spred operater and the new task\nsetTask((previ)=>{\n   return [...previ,newTask]\n})\n\n}\n\n    //This is to delete the task\n    const   deleteTask =  (id)=>{\n        console.log(\"delete : \" + id)\n       \n        setTask( (previ)=> {\n       return   previ.filter((task)=>task.id != id)\n        }\n        )\n     console.log(\"taskState : \" + taskState)\n            }\n\n      function handleDoubleClick(id){\n          console.log(\"Double clicked:: \" + id)\n          setTask((previ)=>{\nreturn previ.map((task)=>\n    task.id == id ? {...task,reminder : !task.reminder } :task\n)\n\n          })\n      }    \n      \n\n    return (\n        <div className=\"container\">\n            {/* We can pass the parameter here */}\n          <Header title=\"Task Tracker\"  taskShow={()=>setAddTask(!showAddTask)} showAddTask={showAddTask} /> \n       \n         {//Insted of using ternery operator we can use the below way \n         showAddTask && <AddTask addTask={addTask}/> }\n         \n          {taskState.length > 0 ?  <Tasks tasks={taskState} onDelete={deleteTask} onDoubleClick={handleDoubleClick}/>\n            : \"No Task Present\"}\n    \n      {/*  <ReactState/>\n          <TestComp/> */}\n        </div>\n    )\n\n   \n}\n\n\n\n\nconst tasksList = [\n    {\n        id:1,\n        name : \"Docter appoitment\",\n        day : \"Feb 6th\",\n        reminder : true\n\n    },\n    {\n        id:2,\n        name : \"School \",\n        day : \"June 8th\",\n        reminder : false\n\n    },\n    {\n        id:3,\n        name : \"Pay Bill \",\n        day : \"Mar 6th\",\n        reminder : true\n\n    }\n]\n\n\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n//Here we will render for the ID \"root\"\n//THe App Component will get render in the \"root\"  div.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}