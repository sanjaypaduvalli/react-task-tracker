{"version":3,"sources":["reportWebVitals.js","Components/Button.js","Components/Header.js","TestComp.js","Components/Task.js","Components/Tasks.js","Components/AddTask.js","TestFolder/UseEffectTest.js","Components/Footer.js","Components/About.jsx","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","text","color","onClick","style","backgroundColor","className","defaultProps","prototype","PropTypes","string","func","isRequired","Header","props","fromPath","useLocation","title","pathname","showAddTask","taskShow","PropType","TestComp","Task","task","onDelete","onDoubleClick","reminder","id","name","cursor","day","Tasks","tasks","map","taskToSend","AddTask","addTask","useState","setTask","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","UseEffectTest","console","log","count","setCount","useEffect","document","test","priv","Footer","contextVal","useContext","GlobalContext","to","About","createContext","App","taskState","setAddTask","data1","fetch","res","json","dat","method","headers","body","JSON","stringify","data","deleteTask","catch","err","handleDoubleClick","s","updateTask","exact","path","render","length","component","Provider","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d346f1f5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Button = ({text,color,onClick}) => {\n\n    return  <button  onClick={onClick} style={{backgroundColor:color}} className=\"btn\">{text}</button>\n    \n}\n\nButton.defaultProps = {\n    text : \"Add\",\n    color:\"blue\"  \n  }\n\nButton.prototype ={\n    text:PropTypes.string,\n    color:PropTypes.string,\n    onClick:PropTypes.func.isRequired\n\n}\n\n\nexport default Button\n","import React from 'react'\nimport PropType from 'prop-types'\nimport Button from './Button'\nimport { useLocation } from 'react-router'\n\nconst Header = (props) => {\n\n\n  const fromPath = useLocation()\n    return (\n        <header className=\"header\">\n           <h1>{props.title}</h1> \n           {/* Created the separate component for Button , Anad passing the text ,color and a onlcick even with the function which needs to call */}\n         { fromPath.pathname == \"/\" &&\n           <Button text={props.showAddTask ? \"Close\" : \"Add\"} color={props.showAddTask ? \"red\" : \"green\"} onClick={props.taskShow}/>\n         }\n        </header>\n    )\n  \n}\n\n//This is the deafault property we are adding in case if its not present \nHeader.defaultProps = {\n    title : \"Default Header\"  \n  }\n\n   \n //This is kind of type script , Reistricing only String, and making required. Otherwise throw wrror\n //this is property validation\n Header.prototype ={\n    title:PropType.string.isRequired\n } \nexport default Header\n","\n//import './App.css'\n\nfunction TestComp() {\n  let name = \"Sanjay\"\nvar status = true\n\n{/* JSX Styling react always recommends to use inline styles.*/}\n\nvar inlineStyle = {\n  color:'red'\n}\n\n  return (\n    <div className=\"App\">\n    <h2 style={inlineStyle}> My name is {name}</h2>\n    {/* THis is how we use the commnet in JSX .\n       *There is no if else condition in JSX  */}\n    <p style={{color:'blue'}} id=\"test\">Status : {status === false ? \"Status is false\" : \"Status is true\"}</p>\n     \n    </div>\n    \n    //The below will give us the error as its one more parent\n   // <p></p>\n  );\n}\n\n\nexport default TestComp;\n","import React from 'react'\nimport {FaTimes} from 'react-icons/fa'\n\n\n\nconst Task = ({task,onDelete,onDoubleClick}) => {\n    \n    return (\n        //Below is how we give the default class name if any other class name presetn\n        //className={`task ${task.reminder == true ? \"reminder\" : ''}`}\n        <div className={`task ${task.reminder ? 'reminder' : ''} `} onDoubleClick={()=>onDoubleClick(task.id)}>\n          <h3>{task.name} <FaTimes color=\"red\" cursor=\"pointer\" onClick={()=>onDelete(task.id)}/> </h3>  \n          <p>{task.day}</p>\n        </div>\n       \n    )\n}\n\nexport default Task\n","import React, { Fragment } from 'react'\nimport Task from './Task'\n\nconst Tasks = (props) => {\n\n\n//console.log(props)\n\n\n    return (\n        <div>\n  {  /* Below is iteration with map. now we creat a separate componet for Task and pas the each task value        \n    { props.tasks.map((task) =>( <h3 key={task.id}>{task.name}</h3> ) ) }\n  */ } \n    {\n    props.tasks.map(\n        (taskToSend)=>(<Task task={taskToSend} key={taskToSend.id} onDelete={props.onDelete} onDoubleClick={props.onDoubleClick}/>)\n        )}\n   \n\n        </div>\n    )\n}\n\nexport default Tasks\n","import React from 'react'\nimport { useState } from 'react'\n\nconst AddTask = ({addTask}) => {\n\n    //Creat a useState hook with empty value\nconst [name,setTask] = useState('')\nconst [day,setDay] = useState('')\nconst [reminder,setReminder] = useState(false)\n\nconst toUpdateValueInState = (e)=>{\n  //  console.log(e)\n   // setTask((val)=> e.target.value)\n   setTask( e.target.value)\n}\n\nfunction addTask1(e){\n     \ne.preventDefault()\n    if(!name){\n    alert(\"Task not present\")\n    return\n    }\n\n    //Send to call back as a object\n    addTask({name,day,reminder});\n\n    setTask('')\n    setDay('')\n    setReminder(false)\n\n\n}\n    return (\n       <form className=\"form-control\" onSubmit={addTask1}>\n    <div className=\"form-control\">\n      <label >Task</label>\n      <input type=\"text\" placeholder=\"Add Task\" value={name} onChange={toUpdateValueInState}/>\n    </div>\n\n<div className=\"form-control\">\n    <label>Date and Time</label>\n    <input type=\"text\" placeholder=\"Add Date and time\" value={day} onChange={(e)=>setDay(e.target.value)}/>\n</div>\n<div className=\"form-control form-control-check\">\n    <label>Reminder</label>\n    <input type=\"checkbox\" checked={reminder}  value={reminder} onChange={(e)=>setReminder(e.target.checked)}/>\n</div>\n<input type=\"submit\" className=\"btn btn-block\"  value=\"Submit\"/>\n       </form>\n    )\n}\n\nexport default AddTask\n","import React, { useState ,useEffect} from 'react'\n\n\n\nexport const UseEffectTest = () => {\nconsole.log(\"Render everytime\")\n    const test1 = () =>{\n       // alert(\"test\");\n        return 0;\n    }\n    function testM(){\n        return 4  \n    }\n    const [count,setCount] = useState(testM());\nvar test;\n useEffect(()=>{\n     // Update the document title using the browser API\n  //  alert(\"g\")\n  console.log(\"useEffect will gets called only\")\n    document.title = `You clicked ${count} times`;\n\n    //The below if we want to clean up somthing when componet is dismounted. We will specify in the below method . With return\n    return () =>{console.log(\"Clean up called at the end\")}\n\n    //If we specify \"[]\" only the useEffect will gets called. During the mount time. \n    //If we specify only on some field update if we trigger useEffect . We can use it like giving the variable name\n    //Ex : \"},[count]\"   ---->  Whenver the count state gets changed the useEffet will get called.\n },[count])\n\n \n\n\n    return (\n        <div>\n            <p> use effect {test}</p>\n            <p> Cliked {count} times</p>\n            <button onClick={()=>setCount((priv)=>priv + 1)}>Click</button>\n        </div>\n\n      \n    )\n}\n\n","import React from 'react'\nimport {BrowserRouter as AliasRouter, Link } from 'react-router-dom'\nimport { useContext } from 'react'\nimport { GlobalContext } from '../App'\n\nexport const Footer = () => {\n   const contextVal =  useContext(GlobalContext)\n    return (\n        <footer>\n           <p>Copyright  2021 </p>\n           <p>Context value : {contextVal}</p>\n       {//To use Link we need to import it, and we need to define a BrowserModule in main index.js file \n       }\n          <Link to=\"about\">About</Link>\n        </footer>\n    )\n}\n","import React from 'react'\nimport { BrowserRouter as Router,Link } from 'react-router-dom'\n\n\nexport const About = () => {\n    return (\n        <div>\n           <h4>Version 1.1</h4> \n               \n           <Link to=\"/\">Home</Link>\n        </div>\n    )\n}\n","import React, { createContext } from 'react'\nimport Header from './Components/Header'\nimport TestComp from './TestComp'\nimport ReactState from './TestFolder/ReactState'\nimport Tasks from './Components/Tasks'\nimport { useState } from 'react'\nimport AddTask from './Components/AddTask'\n//Below is the example for NAmed Export\nimport {UseEffectTest}  from './TestFolder/UseEffectTest'\nimport {useEffect} from 'react'\nimport { BrowserRouter  as Router ,Link,Route,Switch} from 'react-router-dom'\nimport TestRoutes from './TestFolder/TestRoutes'\nimport TestRoutes1 from './TestFolder/TestRoutes1'\nimport {Footer} from './Components/Footer'\nimport {About} from './Components/About'\n\nimport { useContext } from 'react'\n//import './App.css'\n\n//Export the Context here , so that we can access in the child comtext\nexport const GlobalContext = createContext()\nconst App = () => {\n//Before we ar using the constant taskList value.For checking\n// const [taskState,setTask] = useState(()=>tasksList)\n\nconst [taskState,setTask] = useState([])\nconst [showAddTask,setAddTask] = useState(false)\n\n//Below is to show the useContext hook functionalty, Refer Footer componet also, Where we use this useContext\nconst [contextCheck,setContextCheck] = useState({name:\"Sanjay\"});\n\n\n    //This will run after the data got rendererd,Or every render it will get called\n    useEffect(() => {\n        console.log(\"useEffect\")   \n         data1()\n        // setTask(...d1)\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\n    },[])\n\n    const data1 = () =>{  fetch(\"http://localhost:5000/tasks\")\n      .then(res => res.json())\n      .then(dat=>{console.log(...dat); setTask(dat)})\n    }  \n   \n        //Add Task\n    const addTask = (task)=>{\n        console.log(\"TASK \"+ task)\n        //Previous implemtaion with constant data\n        /*\n        const id =Math.floor(Math.random()*100)\n        const newTask = {...task}\n        console.log(newTask)\n        //setTask([...taskState,newTask])\n\n        //Here the taskList is a array, So we are adding the exsting array with spred operater and the new task\n        setTask((previ)=>{\n        return [...previ,newTask]\n         })\n        */\n\n    fetch(\"http://localhost:5000/tasks\",{\n        method : \"post\",\n        headers:{'Content-Type': 'application/json'},\n        body : JSON.stringify(task)\n    }).then(res=>res.json())\n    .then(data=>setTask([...taskState,data]))\n}\n\n    //This is to delete the task\n    const   deleteTask =  (id)=>{\n        console.log(\"delete : \" + id)\n \n    fetch(`http://localhost:5000/tasks/${id}`,{\n        method:'DELETE'  \n        }).then(data1()).catch(err=>console.log(\"Error : \"+err))\n\n    //The below is used when we are using the consta data.Since we are using the server . We use the featch api to delete \n    //the data\n        /*     \n        setTask( (previ)=> {\n       return   previ.filter((task)=>task.id != id)\n        }\n        )*/\n     console.log(\"taskState : \" + taskState)\n            }\n\n      function handleDoubleClick(id){\n        console.log(\"Double clicked:: \" + id)\n        fetch(`http://localhost:5000/tasks/${id}`).then(s=> s.json()).\n        then(data=>{\n       let updateTask ={...data,reminder : !data.reminder}\n\n        console.log(updateTask)\n\n      fetch(`http://localhost:5000/tasks/${id}`,{\n              method:\"PUT\",\n              headers:{'Content-Type': 'application/json'},\n              body : JSON.stringify(updateTask) \n         })\n\n        setTask((tasks) =>{\n        return tasks.map((task)=>task.id == id ? {...task,reminder:!data.reminder} : task)\n     })\n   });\n       \n       /*\n          setTask((previ)=>{\nreturn previ.map((task)=>\n    task.id == id ? {...task,reminder : !task.reminder } :task\n)\n\n          })*/\n      }    \n      \n\n    return (\n        \n        <div className=\"container\">\n            {/* We can pass the parameter here */}\n          <Header title=\"Task Tracker\"  taskShow={()=>setAddTask(!showAddTask)} showAddTask={showAddTask} /> \n\n  \n{//We can use swtich  from router link to swtich between the view. Or we can directly render it\n//Below is is insterd of attaching the componet we are rendering the view  \n}\n\n<Route exact path=\"/\"  render={()=>(\n    <>\n      {//Insted of using ternery operator we can use the below way \n         showAddTask && <AddTask addTask={addTask}/> }\n         \n         {taskState.length > 0 ?  \n                   ( <Tasks tasks={taskState} onDelete={deleteTask} onDoubleClick={handleDoubleClick}/> )\n           : ( \"No Task Present\") }\n    </>\n)} />\n       \n\n<Route path=\"/about\" component={About}/>\n\n\n{/*We wrap the context here.*/}\n<GlobalContext.Provider value=\"Sanjay\"> \n<Footer />\n</GlobalContext.Provider>\n\n<UseEffectTest/>\n      {/* \n       <UseEffectTest/>\n        <ReactState/>\n          <TestComp/> */}\n\n{/*Below is realted  \n          <div style={{border:\"1px solid red\"}}>\n              <p>Test styles</p>\n          <Router>\n              <Switch>\n                  <Route path=\"/test\" >\n                <TestRoutes/>\n                  </Route>\n                  <Route path=\"/test1\" component={TestRoutes1} />\n                  <Route path=\"/about\" component={About} />\n              </Switch>\n           <p>   <Link to=\"test\">Link test</Link> </p>\n              <Link to=\"test1\">Link test 1</Link>\n            <p>  <Link to=\"about\">About </Link></p>\n              </Router>\n          </div>\n      */}   \n        </div>\n    )\n\n   \n}\n\n\n\n\nconst tasksList = [\n    {\n        id:1,\n        name : \"Docter appoitment\",\n        day : \"Feb 6th\",\n        reminder : true\n\n    },\n    {\n        id:2,\n        name : \"School \",\n        day : \"June 8th\",\n        reminder : false\n\n    },\n    {\n        id:3,\n        name : \"Pay Bill \",\n        day : \"Mar 6th\",\n        reminder : true\n\n    }\n]\n\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\n//Here we will render for the ID \"root\"\n//THe App Component will get render in the \"root\"  div.\n\nReactDOM.render(\n // <React.StrictMode>  \n  \n<BrowserRouter>\n    <App />\n   \n    </BrowserRouter>,  \n //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}